/* 
 * Workspace API
 *
 * Agent API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Genesys.Workspace.Client.SwaggerDateConverter;

namespace Genesys.Workspace.Model
{
    /// <summary>
    /// The list of all the statitstics in given subscription as kvp.
    /// </summary>
    [DataContract]
    public partial class InlineResponse2002DataStatistics :  IEquatable<InlineResponse2002DataStatistics>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse2002DataStatistics" /> class.
        /// </summary>
        /// <param name="StatisticId1">StatisticId1.</param>
        /// <param name="___">___.</param>
        public InlineResponse2002DataStatistics(StatisticValueForPeekResponse StatisticId1 = default(StatisticValueForPeekResponse), StatisticValueForPeekResponse ___ = default(StatisticValueForPeekResponse))
        {
            this.StatisticId1 = StatisticId1;
            this.___ = ___;
        }
        
        /// <summary>
        /// Gets or Sets StatisticId1
        /// </summary>
        [DataMember(Name="statisticId1", EmitDefaultValue=false)]
        public StatisticValueForPeekResponse StatisticId1 { get; set; }

        /// <summary>
        /// Gets or Sets ___
        /// </summary>
        [DataMember(Name="...", EmitDefaultValue=false)]
        public StatisticValueForPeekResponse ___ { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse2002DataStatistics {\n");
            sb.Append("  StatisticId1: ").Append(StatisticId1).Append("\n");
            sb.Append("  ___: ").Append(___).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse2002DataStatistics);
        }

        /// <summary>
        /// Returns true if InlineResponse2002DataStatistics instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse2002DataStatistics to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse2002DataStatistics input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.StatisticId1 == input.StatisticId1 ||
                    (this.StatisticId1 != null &&
                    this.StatisticId1.Equals(input.StatisticId1))
                ) && 
                (
                    this.___ == input.___ ||
                    (this.___ != null &&
                    this.___.Equals(input.___))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StatisticId1 != null)
                    hashCode = hashCode * 59 + this.StatisticId1.GetHashCode();
                if (this.___ != null)
                    hashCode = hashCode * 59 + this.___.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
