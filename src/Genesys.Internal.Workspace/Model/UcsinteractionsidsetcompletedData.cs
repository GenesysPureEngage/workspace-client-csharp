/* 
 * Workspace API
 *
 * Agent API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Genesys.Internal.Workspace.Client.SwaggerDateConverter;

namespace Genesys.Internal.Workspace.Model
{
    /// <summary>
    /// UcsinteractionsidsetcompletedData
    /// </summary>
    [DataContract]
    public partial class UcsinteractionsidsetcompletedData :  IEquatable<UcsinteractionsidsetcompletedData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UcsinteractionsidsetcompletedData" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UcsinteractionsidsetcompletedData() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UcsinteractionsidsetcompletedData" /> class.
        /// </summary>
        /// <param name="CallDuration">The duration of the call (required).</param>
        /// <param name="UserData">A key/value pairs list of the user data of the call. (required).</param>
        public UcsinteractionsidsetcompletedData(int? CallDuration = default(int?), List<Kvpair> UserData = default(List<Kvpair>))
        {
            // to ensure "CallDuration" is required (not null)
            if (CallDuration == null)
            {
                throw new InvalidDataException("CallDuration is a required property for UcsinteractionsidsetcompletedData and cannot be null");
            }
            else
            {
                this.CallDuration = CallDuration;
            }
            // to ensure "UserData" is required (not null)
            if (UserData == null)
            {
                throw new InvalidDataException("UserData is a required property for UcsinteractionsidsetcompletedData and cannot be null");
            }
            else
            {
                this.UserData = UserData;
            }
        }
        
        /// <summary>
        /// The duration of the call
        /// </summary>
        /// <value>The duration of the call</value>
        [DataMember(Name="callDuration", EmitDefaultValue=false)]
        public int? CallDuration { get; set; }

        /// <summary>
        /// A key/value pairs list of the user data of the call.
        /// </summary>
        /// <value>A key/value pairs list of the user data of the call.</value>
        [DataMember(Name="userData", EmitDefaultValue=false)]
        public List<Kvpair> UserData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UcsinteractionsidsetcompletedData {\n");
            sb.Append("  CallDuration: ").Append(CallDuration).Append("\n");
            sb.Append("  UserData: ").Append(UserData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UcsinteractionsidsetcompletedData);
        }

        /// <summary>
        /// Returns true if UcsinteractionsidsetcompletedData instances are equal
        /// </summary>
        /// <param name="input">Instance of UcsinteractionsidsetcompletedData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UcsinteractionsidsetcompletedData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CallDuration == input.CallDuration ||
                    (this.CallDuration != null &&
                    this.CallDuration.Equals(input.CallDuration))
                ) && 
                (
                    this.UserData == input.UserData ||
                    this.UserData != null &&
                    this.UserData.SequenceEqual(input.UserData)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CallDuration != null)
                    hashCode = hashCode * 59 + this.CallDuration.GetHashCode();
                if (this.UserData != null)
                    hashCode = hashCode * 59 + this.UserData.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
